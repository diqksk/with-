패키지명은 소문자만쓰기

클래스 네임은 첫글자는 무조건 대문자 숫자는 맨뒤에

패키지명은 왠만하면 자기걸 정해놓는게 좋음 (일반적으론 사이트명을 뒤집은거 사용 (ex . com.naver.www)


소스파일을 생성하는 규칙
-첫글자는 대문자

실행시키려면 반드시 main 함수(메서드)가 있어야함.

* 오늘의 목표는 변수와 함수가 뭔지 알기

모니터 화면 출력하기라고 말하면 그러한 기능을 하는 함수를 찾기

Sys.out.명령(함수를 호출한다)

같은목적의 여러개의 함수들이 존재한다(출력하는 방법이 다름)
 
행을 내리지 않은애는 print
행을 내리는 애는 println


문자중에 제어문자(기호) : 공백문자라고도 함 , 눈에 보이지는 않음, 동작을 의미하는 문자 (ex. space bar,tap)
\t \r \n<enter

화면 출력시 모양(형식) formatted 문자열을 출력한다 (포멧이 있는..) 

제어문자들이 포함된 문자열 ->형식이 있는 문자열 이라고 부름

main은 함수가 여러개있으면 동작을 안함 (그래서 메인01 이런식으로 나누는듯)

ctrl + space = 함수 자동완성

인텔리J가 자동완성을 잘시켜주기때문에 회사에서 많이 씀 (집에서 깔아보기)


받기 받아서 이런표현이 나오거든 변수를 만든다고 생각하세요 (저장한다 라고 생각하기)
값을 저장하려면 반드시 변수 필요
변수는 메모리의 일부분(공간)
프로그램에서 변수는 상자라고 생각하면됨(숫자가 아니라 공간을 만ㅁ드는것)
1. 변수를 선언한다. 자료형 변수명; 의미를 알수 있게 변수명쓰기... (a,b,c,d보단 나름의 의미 알수있게쓰기)

2. 변수에 값을 저장한다.. 대입연산자(명령기호) 변수명 = 값  *대입연산자 =의 왼쪽에는 반드시 변수명만 들어갈 수 있음) =는 저장한다는 의미..  a=b : b를 a에 저장한다..
3. 변수를 사용할 수 있다 변수명 - 변수에 저장된 값을 어떻게 한다는 의미.

() 소괄호는  main함수가 소괄호에게 괄호안에것을 준다 라는의미


자료형 
-boolean // 논리형 : true, false (값)

정수 : 크기가 다름
-byte  / 1byte
-short / 2byte
-int   / 4byte <-- 인트로 표현할 수 있는 최대 10진 자리 : 9자리 999,999,999 까지가 최대
-long  / 8byte

실수
-float
-double<<--주로많이씀

문자
char //2byte


소문자로 쓴 자료형은 Primitive : 기본형이다 (기본형은 값이다)
값 ~이다.
참조형 reference : 위치를 의미하기때문에 사용법이 다르다...

첫글자가 대문자인 자료형들은 참조형(클래스)다.

형변환(casting) 은 (변환할자료형)변수명,값

String s = "" 는 문자열이다



연산자들
-연산의 결과 자료형

*산술연산 : 값 (+ - * / %)
두개의 값이 필요하다.
정수와정수-> 정수
실수가 있는경우 - >실수(double)
ran%10; // 0~(10-1) :최대값을 한정할 수 있다.
계산기 용도만 있는건 아니고 제어시 조건을 맞추기 위한 연산으로 사용할 수 있어야 한다.
1개 이상의 연산자를 사용한 문장 - > expression (식)

*관계연산 : 논리(boolean) ~이면 // 값간의 비교 (>,<,<=,>=,==,!=)   (조건식이라고 명명)
		// 값 간의 크기를 비교연산자
		// 물어본다는 생각 필요 - >  true false 대답한다...
		// ~이면 ~냐 라고 물어본다라고 생각하기
		// 조건식을 쓰세요 라고하면 관계연산자



*논리연산 : 논리		// 조건 간의 비교 (조합)
조건식이 2개 이상 있을 때 사용
%%를 엔드연산이라고 한다
|| or 연산
한쪽에만 ! 는 not연산
~에서 ~사이 0<n && n < 10 (무조건 n은 따로따로 범위를줘야함)


*비트연산 : 정수		2진수 연산(자리) 저녁에 2진수 파악하기----------숙제@




키보드 입력시 원하는 자료형으로 받을 수 있다..
입력기 - >변환기( filter) - >원하는 자료형 받기



키보드에서 받는건 System.in
 

오류가 생겼을때 대응하는 코드가 try{@%@#%@#%@ }catch(InputMmismatchExceotion e) 에러가 생겼을때 자신이 처리할거면 try catch


Scanner kb <-----------------머임??


조건연산자 :  
(a<b) ? a:b; a가 b보다 작으면 a를 출력 아니면 b



제어문
-공통적으로 조건식의 결과형 boolean <- 관계연산, 논리연산
분기문(선택문) : 조건이 참이면 ~를 선택또는 실행한다 
if ,else
if else

반복문 : 조건이 참이면 계속 실행한다.
for(~부터;~까지;~씩) {}
switch(값){case 0: } 값을 계속해서 증가하면서 반복해 실행
while 조건보고 실행
do while - 우선실행후 조건보기

if의 기본형식이 3가지정도 된다
if(조건식) { }  <- 참이면 실행
if(조건식){}else{}

다중(중첩)구조를 하다보면 들여쓰기가 많아져서 보기가 불편하다
그래서 열맞춤을 함 : 구조는 그대로고 보이는 모습만 편하게 - >else if


변수명이 같으면 연산을 줄여서 쓰는 방법 : 복합대입 +=

난수는 doube lf =Math.random(); 0~1 소수점 난수
Random random = new random();
int ran = random.nextInt();

교환하기는 앞으로 꼭 알아야함
if(min>max) {	//교환 - 두 변수의 값을 바꾸는것 :  대입하는 순서를 잘 지키세요
		int t = min; // 
		min = max;
		max = t;



숙제 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
1. 2진수
2. 키보드에서 입력되는 문자들을 소문자 대문자 숫자 기호로 구분하세요
참고는 ASCII 문자 값

3. 소문자 대문자 숫자 기호를 구분하는것 + 영문자 개수, 숫자 개수 출력,




